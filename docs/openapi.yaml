openapi: '3.0.2'
info:
  title: OoopsTrap Project
  version: '1.1'
  description: |
    API для управления игровыми персонажами, пользовательскими данными, играми.
    Поле `x-available-for` указывает, какие роли имеют доступ к эндпоинту:
    - Guest: неаутентифицированные пользователи
    - User: зарегистрированные игроки
    - Admin: администраторы системы
    
    ### Кастомные параметры
    - `x-max-players-for-map`: максимальное количество участников для данной опции.

servers:
  - url: 'http://localhost:8080'
    description: 'Локальный сервер для тестирования'

tags:
  - name: Timeline


components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: INTERNAL_OOPS_TOKEN

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Internal error code for programmatic handling
          enum:
            - INVALID_INPUT
            - AUTH_TOKEN_MISSING
            - AUTH_TOKEN_INVALID
            - ROLE_NOT_AUTHORIZED
            - RESOURCE_NOT_FOUND
          example: INVALID_INPUT
        message:
          type: string
          description: Human-readable error description
          example: Invalid input data provided.
        details:
          type: array
          description: Additional details about the error (e.g., invalid fields)
          items:
            type: object
            properties:
              field:
                type: string
                description: Field that caused the error
                example: title
              message:
                type: string
                description: Specific error message for the field
                example: Title must be between 1 and 255 characters.
        timestamp:
          type: string
          format: date-time
          description: Time when the error occurred
          example: 2025-10-07T16:47:00Z
        path:
          type: string
          description: Request path that caused the error
          example: /timeline

    Timeline:
      type: object
      required:
        - id
        - title
        - text
      properties:
        id:
          type: integer
        image_url:
          type: string
          format: url
          minLength: 1
          maxLength: 2048
        title:
          type: string
          minLength: 1
          maxLength: 255
        text:
          type: string
          minLength: 1
          maxLength: 1000

    Participant:
      type: object
      required:
        - id
        - title
        - description
      properties:
        id:
          type: integer
          minimum: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          type: string
          minLength: 1
          maxLength: 255

    ParticipantList:
      type: object
      required:
        - participants
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'

  responses:
    200Ok:
      description: Ok

    204NoContent:
      description: No content

    400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Invalid input data provided.
            code: INVALID_INPUT
            details:
              - field: title
                message: Title must be between 1 and 255 characters.
            timestamp: 2025-10-07T16:47:00Z
            path: /timelinet

    401Unauthorized:
      description: No token provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: No token provided in cookie 'INTERNAL_OOPS_TOKEN'.
            code: AUTH_TOKEN_MISSING
            timestamp: 2025-10-07T16:47:00Z
            path: /landing/timelines

    403Forbidden:
      description: Not enough rights
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: This action is restricted to Admin role.
            code: ROLE_NOT_AUTHORIZED
            timestamp: 2025-10-07T16:47:00Z
            path: /landing/timeline

    404NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Project with ID 999 does not exist.
            code: RESOURCE_NOT_FOUND
            details:
              resource: Participant
              id: 999
            timestamp: 2025-10-07T16:47:00Z
            path: /participant/999

    409Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Image already exists.
            code: CONFLICT
            details:
              resource: /landing/timeline/1
              id: name
            timestamp: 2025-10-07T16:47:00Z
            path: /landing/timeline/1

  requestBodies:
    TimelinePost:
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - title
              - description
              - date
            properties:
              title:
                type: string
                minLength: 1
                maxLength: 255
              description:
                type: string
                minLength: 1
                maxLength: 1000
              image:
                type: string
                format: binary
                description: Image file (WebP). Maximum size 10MB
                x-max-file-size: 10485760
              date:
                type: string
                format: date

    TimelinePatch:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              title:
                type: string
                minLength: 1
                maxLength: 255
              description:
                type: string
                minLength: 1
                maxLength: 1000
              image:
                type: string
                format: binary
                description: Image file (WebP). Maximum size 10MB
                x-max-file-size: 10485760
              date:
                type: string
                format: date

paths:
  /landing/timelines:
    get:
      tags:
        - Timeline
      summary: 'Get all events on landing timeline'
      description: 'Get all events on landing timeline in \"О Поиске\" SORTED BY position in landing'
      security:
        - cookieAuth: [ ]
      x-available-for:
        - Guest
        - Lead
        - Admin
      responses:
        200:
          description: 'List of timeline events'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineList'
        401:
          $ref: '#/components/responses/401Unauthorized'

  /landing/timeline:
    post:
      tags:
        - Timeline
      summary: 'Create new timeline event'
      security:
        - cookieAuth: []
      x-available-for:
        - Admin
      requestBody:
        $ref: '#/components/requestBodies/TimelinePost'
      responses:
        201:
          description: 'Created timeline event'
          headers:
            Location:
              schema:
                type: string
                example: /landing/timeline/123
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'

  /landing/timeline/{id}:
    get:
      tags:
        - Timeline
      summary: 'Get timeline event'
      security:
        - cookieAuth: []
      x-available-for:
        - Guest
        - Lead
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Timeline event'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
        401:
          $ref: '#/components/responses/401Unauthorized'
        404:
          $ref: '#/components/responses/404NotFound'
    patch:
      tags:
        - Timeline
      summary: 'Patch timeline event'
      security:
        - cookieAuth: []
      x-available-for:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/TimelinePatch'
      responses:
        200:
          description: 'Updated timeline event'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - Timeline
      summary: 'Delete timeline event'
      security:
        - cookieAuth: []
      x-available-for:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          $ref: '#/components/responses/204NoContent'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'

  /participants:
    get:
      tags:
        - Participant
      summary: 'Get all participants'
      description: 'supposed to use in ADMIN panels. To get entire project use GET /project/{project_id}'
      security:
        - cookieAuth: [ ]
      x-available-for:
        - Guest
        - Lead
        - Admin
      responses:
        200:
          description: 'List of all participants'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'

  /participant:
    post:
      tags:
        - Participant
      summary: 'Create new participant'
      security:
        - cookieAuth: [ ]
      x-available-for:
        - Admin
      requestBody:
        $ref: '#/components/requestBodies/ParticipantPost'
      responses:
        201:
          description: 'Created participant'
          headers:
            Location:
              schema:
                type: string
                example: /participant/123
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'

  /participant/{id}:
    patch:
      tags:
        - Participant
      summary: 'Patch participant'
      security:
        - cookieAuth: [ ]
      x-available-for:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ParticipantPatch'
      responses:
        200:
          description: 'Updated participant'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - Participant
      summary: 'Delete participant'
      security:
        - cookieAuth: [ ]
      x-available-for:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          $ref: '#/components/responses/204NoContent'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
